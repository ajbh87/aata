/*
	Theme Name: AATA
	Theme URI: http://alfredo.xyz 
    Description: Wordpress Theme for Abogados a tu Alcance
	Version: 0.5.0
	Author: Alfredo J. Bermudez
	Author URI: http://alfredo.xyz
	Tags: AATA, HTML5, CSS3

	License: MIT
	License URI: http://opensource.org/licenses/mit-license.php
*/
html {
  font-size: 15px;
  line-height: 1.6666;
  font-weight: 400;
  font-family: "Playfair Display", "adobe-garamond-pro", "Garamond", "Book Antiqua", Palatino, serif;
  color: #444;
  margin: 0;
  padding: 0; }
  @media only screen and (min-width: 1500px) {
    html {
      font-size: 1vw; } }
  @media only screen and (min-width: 2200px) {
    html {
      font-size: 22px; } }

body {
  width: 100%;
  height: 100%;
  overflow: auto;
  margin: 0;
  padding: 0 0 2.6rem 0;
  background-color: #fff;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%2345b8ac' fill-opacity='0.20'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E");
  background-attachment: fixed; }
  @media only screen and (orientation: portrait), (max-width: 1199px) {
    body.menu-is-active {
      overflow: hidden; } }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    body {
      padding: 0; } }

/* global box-sizing */
*,
*:after,
*:before {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }

h1, h2, h3, h4, h5, h6 {
  margin: 1.95rem 0 0.65rem 0; }

h1, .h1 {
  font-size: 1.8em; }

h2, .h2 {
  font-size: 1.6em; }

h3, .h3 {
  font-size: 1.4em; }

h4, .h4 {
  font-size: 1.2em; }

h5, .h5 {
  font-size: 1em; }

h6, .h6 {
  font-size: 0.8em; }

p {
  margin: 0.65rem 0; }

.clear {
  *zoom: 1; }
  .clear:before, .clear:after {
    content: ' ';
    display: table; }
  .clear:after {
    clear: both; }

img {
  max-width: 100%;
  vertical-align: bottom; }

a {
  color: #444;
  text-decoration: none;
  border-bottom: 3px dotted #d3d3d3;
  transition: all .2s ease-out; }
  a:hover, a:focus {
    background: #e6e6e6;
    border-bottom-color: #45b8ac; }
  a:focus, a:hover, a:active {
    outline: 0; }

input {
  border: 2px dotted transparent;
  border-bottom-color: #d3d3d3; }

textarea, fieldset {
  border: 2px dotted #d3d3d3; }

input, textarea {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  padding: .25rem; }
  input:focus, textarea:focus {
    outline: 0;
    border: 2px solid #45b8ac; }

input[type="search"] {
  box-sizing: border-box;
  border-radius: 0 !important; }

input[type="checkbox"] {
  position: relative;
  height: 0.8rem;
  width: 0.8rem; }
  input[type="checkbox"]:focus {
    outline: 2px solid #45b8ac; }
  input[type="checkbox"]:checked:focus {
    outline: 2px solid #d3d3d3; }

.hidden {
  display: none; }

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.sr-only {
  display: block;
  overflow: hidden !important;
  width: 0 !important;
  height: 0 !important; }

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  transition: fill .2s ease-in-out;
  fill: currentColor; }

.icon--full-block {
  display: block;
  width: auto;
  height: 100%;
  max-width: 100%; }

.button {
  font-weight: 700;
  box-sizing: border-box;
  transition: all .2s ease-out;
  border: 0;
  background: #45b8ac;
  color: #fff;
  border: 2px solid #45b8ac;
  line-height: 1;
  padding: 0.3333rem 0.6666rem; }
  .button .icon {
    fill: #fff; }
  .button:focus {
    outline: 0; }
  .button[disabled] {
    background: #a1dcd6;
    border-color: #a1dcd6;
    cursor: not-allowed; }
    .button[disabled]:hover, .button[disabled]:focus {
      background: #45b8ac;
      border-color: #45b8ac;
      color: #fff; }
  .button:hover, .button:focus {
    background: #fff;
    color: #45b8ac; }
    .button:hover .icon, .button:focus .icon {
      fill: #45b8ac; }

.wrapper {
  position: relative;
  width: 100%;
  min-height: 100vh;
  min-height: calc(100vh - 2.46662rem);
  display: flex;
  justify-content: space-between;
  flex-direction: column; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .wrapper {
      flex-direction: row;
      padding: 0 0 0 16.9rem; }
      .wrapper:before {
        content: ' ';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6rem;
        z-index: 0;
        background: #45b8ac; } }

.header {
  position: fixed;
  height: 3.9rem;
  width: 100%;
  flex: 1 0 auto;
  z-index: 20;
  background: #fff;
  border-bottom: 1px solid #d3d3d3; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .header {
      left: 0;
      top: 0;
      bottom: 0;
      width: 16.9rem;
      height: 100vh;
      overflow: auto;
      border: 0; } }

.menu-button {
  float: right;
  height: 100%;
  width: 3.9rem;
  font-weight: 700;
  box-sizing: border-box;
  transition: all .2s ease-out;
  border: 0;
  background: #fff;
  color: #45b8ac;
  text-align: center; }
  .menu-button .icon {
    fill: #45b8ac; }
  .menu-button:focus {
    outline: 0; }
  .menu-button[disabled] {
    background: white;
    border-color: white;
    cursor: not-allowed; }
    .menu-button[disabled]:hover, .menu-button[disabled]:focus {
      background: #fff;
      border-color: #fff;
      color: #45b8ac; }
  .menu-button:hover, .menu-button:focus {
    background: #e6e6e6;
    color: #45b8ac; }
    .menu-button:hover .icon, .menu-button:focus .icon {
      fill: #45b8ac; }
  .menu-button[aria-expanded="true"] {
    background: #45b8ac;
    color: #fff; }
    .menu-button[aria-expanded="true"] .menu-icon__line {
      background: #fff; }
    .menu-button[aria-expanded="true"]:hover, .menu-button[aria-expanded="true"]:focus {
      background: #78c4bd;
      color: #fff; }
      .menu-button[aria-expanded="true"]:hover .menu-icon__line, .menu-button[aria-expanded="true"]:focus .menu-icon__line {
        background: #fff; }
    .menu-button[aria-expanded="true"] .menu-icon__line--1 {
      transform: translate(0, 0.7rem) rotate(45deg); }
    .menu-button[aria-expanded="true"] .menu-icon__line--3 {
      transform: translate(0, -0.7rem) rotate(-45deg); }
    .menu-button[aria-expanded="true"] .menu-icon__line--2 {
      opacity: 0; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .menu-button {
      display: none; } }

.menu-icon {
  position: relative;
  width: 2rem;
  height: 1.6rem;
  display: inline-block; }
  .menu-icon__line {
    width: 100%;
    height: 0.2rem;
    background: #45b8ac;
    transform-origin: center center;
    transition: all .2s ease-in-out; }
    .menu-icon__line--2 {
      position: relative;
      top: 0.5rem; }
    .menu-icon__line--3 {
      position: relative;
      top: 1rem; }

.logo {
  height: 100%;
  width: auto;
  float: left; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .logo {
      float: none;
      position: sticky;
      top: 0;
      height: 6rem;
      z-index: 50; } }
  .logo__link {
    display: block;
    height: 100%;
    width: auto;
    padding: 0.65rem;
    background: #fff;
    border-bottom: 0; }
    .logo__link:hover {
      background: #f9f9f9; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .logo__link {
        border-bottom: 3px solid #45b8ac;
        display: flex;
        align-items: center; } }
  .logo__image {
    height: 100%;
    width: auto;
    max-width: 100%;
    flex: 1 1 auto; }

.nav {
  position: relative;
  clear: both;
  padding: 0;
  width: 100%;
  background: #fff;
  padding-bottom: 5.2rem; }
  @media only screen and (orientation: portrait), (max-width: 1199px) {
    .nav {
      height: 100vh;
      height: calc(100vh - 3.9rem);
      overflow: auto;
      transition: opacity .2s ease-out visibility .2s ease-out;
      opacity: 0;
      visibility: hidden;
      z-index: 500; }
      .nav.is-active {
        opacity: 1;
        visibility: visible; }
      .nav.is-hidden {
        display: none; } }
  .nav ul {
    list-style: none;
    padding: 0;
    margin: 0; }
  .nav a {
    display: block;
    padding: 0.65rem 1.3rem; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .nav a {
        padding: 0.325rem 0.65rem; } }
    .nav a.active {
      background: #45b8ac;
      color: #fff; }
  .nav .children,
  .nav .sub-menu {
    position: relative;
    border-right: 3px dotted #45b8ac; }
    .nav .children > li a,
    .nav .sub-menu > li a {
      padding-left: 2.6rem; }
      @media only screen and (orientation: landscape) and (min-width: 1200px) {
        .nav .children > li a,
        .nav .sub-menu > li a {
          padding-left: 1.3rem; } }
  .nav.js .menu-item-has-children,
  .nav.js .page_item_has_children {
    position: relative; }
    .nav.js .menu-item-has-children > a,
    .nav.js .page_item_has_children > a {
      padding-right: 2.6rem; }
  .nav.js .children,
  .nav.js .sub-menu {
    overflow: hidden;
    visibility: hidden;
    max-height: 0;
    transition: max-height .2s ease-in-out, visibility .2s ease-in-out; }
    .nav.js .children.is-active,
    .nav.js .sub-menu.is-active {
      visibility: visible;
      max-height: 100vh; }

.expand {
  position: absolute;
  top: 0.3rem;
  height: 2.3666rem;
  width: 2.3666rem;
  right: 0.3rem;
  margin: 0;
  padding: 0.4rem;
  text-align: center;
  font-weight: 700;
  box-sizing: border-box;
  transition: all .2s ease-out;
  border: 0;
  background: #d3d3d3;
  color: #444;
  border-radius: 50%; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .expand {
      height: 1.7166rem;
      width: 1.7166rem; } }
  .expand .icon {
    fill: #444; }
  .expand:focus {
    outline: 0; }
  .expand[disabled] {
    background: white;
    border-color: white;
    cursor: not-allowed; }
    .expand[disabled]:hover, .expand[disabled]:focus {
      background: #d3d3d3;
      border-color: #d3d3d3;
      color: #444; }
  .expand .expand-icon__line {
    background: #444; }
  .expand:hover, .expand:focus {
    background: #e6e6e6; }
    .expand:hover .expand-icon__line, .expand:focus .expand-icon__line {
      background: #45b8ac; }
  .expand[aria-expanded="true"] {
    background: #45b8ac; }
    .expand[aria-expanded="true"] .expand-icon__line {
      background: #fff; }
    .expand[aria-expanded="true"]:hover, .expand[aria-expanded="true"]:focus {
      background: #78c4bd; }
      .expand[aria-expanded="true"]:hover .expand-icon__line, .expand[aria-expanded="true"]:focus .expand-icon__line {
        background: #fff; }
    .expand[aria-expanded="true"] .expand-icon__line--v {
      transform: rotate(90deg); }

.expand-icon {
  position: relative;
  width: 100%;
  height: 100%; }
  .expand-icon__line {
    transition: all 0.2s ease-out;
    transform-origin: center center;
    position: absolute; }
    .expand-icon__line--v {
      height: 100%;
      width: 2px;
      top: 0;
      left: 50%;
      left: calc(50% - 1px); }
    .expand-icon__line--h {
      width: 100%;
      height: 2px;
      left: 0;
      top: 50%;
      top: calc(50% - 1px); }

.sidebar {
  background: #e6e6e6;
  position: relative;
  display: grid;
  grid-template-columns: 1fr 2fr; }
  @media only screen and (max-width: 720px) {
    .sidebar {
      display: block; } }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .sidebar {
      display: block;
      flex: 0 1 auto;
      width: 16.9rem; } }
  .sidebar__search {
    display: flex;
    align-items: center;
    background: #444;
    padding: 1.3rem; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .sidebar__search {
        width: 100%;
        height: 6rem; } }
  .sidebar__content {
    padding: 1.3rem; }
    .sidebar__content > :first-child {
      margin-top: 0; }
    .sidebar__content > :last-child {
      margin-bottom: 0; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .sidebar__content {
        position: sticky;
        top: 0;
        width: 100%; } }
  .sidebar__link-list {
    list-style: none;
    padding: 0;
    margin: 0 0 1.3rem 0; }
  .sidebar__link {
    display: block;
    margin-bottom: 0.325rem;
    font-size: 1rem; }
    .sidebar__link .icon {
      display: block;
      float: left;
      height: 1.3rem;
      width: 1.3rem;
      padding: 0.15rem;
      background: #45b8ac;
      margin-top: 0.1833rem;
      margin-right: 0.5rem;
      fill: #fff; }
      @media only screen and (orientation: landscape) and (min-width: 1200px) {
        .sidebar__link .icon {
          position: absolute;
          left: -0.65rem; } }

.search {
  position: relative;
  display: flex;
  width: 100%;
  height: 2rem;
  font-size: 0.75rem; }
  .search__input, .search__submit {
    display: block;
    height: 100%;
    width: 75%; }
  .search__input {
    box-sizing: border-box;
    flex: 1 1 auto;
    border: 0;
    border-bottom: 3px solid #d3d3d3; }
    .search__input:focus {
      border: 0;
      border-bottom: 3px solid #45b8ac; }
  .search__submit {
    flex: 0 0 auto;
    width: 2rem;
    height: 2rem;
    font-weight: 700;
    box-sizing: border-box;
    transition: all .2s ease-out;
    border: 0;
    background: #45b8ac;
    color: #fff;
    padding: .25rem;
    margin: 0; }
    .search__submit .icon {
      fill: #fff; }
    .search__submit:focus {
      outline: 0; }
    .search__submit[disabled] {
      background: #a1dcd6;
      border-color: #a1dcd6;
      cursor: not-allowed; }
      .search__submit[disabled]:hover, .search__submit[disabled]:focus {
        background: #45b8ac;
        border-color: #45b8ac;
        color: #fff; }
    .search__submit:hover, .search__submit:focus {
      background: #78c4bd;
      color: #fff; }
      .search__submit:hover .icon, .search__submit:focus .icon {
        fill: #fff; }

.main {
  position: relative;
  padding: 3.9rem 2.6rem 0 1.3rem;
  z-index: 1;
  border-left: 1.3rem solid #45b8ac;
  min-height: 100vh;
  min-height: calc(100vh - 2.46662rem);
  margin-right: 1.3rem; }
  @media only screen and (max-width: 720px) {
    .main {
      margin-right: 0;
      padding: 3.9rem 1.3rem 0 1.3rem;
      border-left-width: 0; } }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .main {
      padding-top: 0;
      flex: 0 1 56rem; } }
  .main__title {
    text-align: center; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .main__title {
        display: flex;
        justify-content: center;
        align-items: flex-end;
        height: 4.7rem;
        font-size: 1.2rem;
        line-height: 1.25;
        padding: 0.65rem 1.3rem;
        margin: 0;
        color: #fff; }
        .main__title--margin {
          margin: 1.3rem 0; }
        .main__title .label {
          color: #fff; } }
  .main .widget_text {
    margin: 2.6rem 0; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .main .widget_text {
        margin-top: 0; }
        .main .widget_text h3 {
          display: flex;
          justify-content: center;
          align-items: flex-end;
          height: 4.7rem;
          font-size: 1.2rem;
          line-height: 1.25;
          padding: 0.65rem 1.3rem;
          margin: 0;
          color: #fff; }
          .main .widget_text h3--margin {
            margin: 1.3rem 0; } }
    .main .widget_text .textwidget {
      background: #fff;
      padding: 1.95rem;
      color: #444; }
      .main .widget_text .textwidget > :first-child {
        margin-top: 0; }
      .main .widget_text .textwidget > :last-child {
        margin-bottom: 0; }
      @media only screen and (max-width: 720px) {
        .main .widget_text .textwidget {
          padding: 0.975rem; } }

.article {
  margin: 2.6rem 0; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .article {
      margin-top: 0; } }
  .article__title {
    font-size: 1.2rem;
    margin: 0 0 0.65rem 0; }
  .article__date {
    display: block;
    position: absolute;
    width: 3.9rem;
    right: 0;
    margin-top: 1.3rem;
    padding: 0.65rem;
    text-align: center;
    font-size: 0.75rem;
    line-height: 1.25;
    background: #444;
    color: #fff; }
    @media only screen and (max-width: 720px) {
      .article__date {
        position: relative;
        width: auto;
        height: auto;
        text-align: left; } }
  .article__author {
    font-size: 0.75rem;
    font-style: italic; }
  .article__content {
    background: #fff;
    padding: 1.95rem;
    color: #444; }
    .article__content > :first-child {
      margin-top: 0; }
    .article__content > :last-child {
      margin-bottom: 0; }
    @media only screen and (max-width: 720px) {
      .article__content {
        padding: 0.975rem; } }
    .article__content aside {
      display: block;
      position: relative;
      float: right;
      right: -4.55rem;
      width: 45%;
      padding: 1.3rem;
      margin: 1.3rem 0 1.3rem -3.25rem;
      background: #e6e6e6; }
      .article__content aside > :first-child {
        margin-top: 0; }
      .article__content aside > :last-child {
        margin-bottom: 0; }
      @media only screen and (max-width: 720px) {
        .article__content aside {
          float: none;
          right: auto;
          width: auto;
          margin: 1.3rem 0; } }
    .article__content blockquote {
      font-style: italic;
      border: 0 dotted #e6e6e6;
      border-width: 3px 0;
      margin: 1.3rem; }
  .article__excerpt {
    background: #fff;
    padding: 1.95rem;
    color: #444;
    flex: 1 1 auto; }
    .article__excerpt > :first-child {
      margin-top: 0; }
    .article__excerpt > :last-child {
      margin-bottom: 0; }
    @media only screen and (max-width: 720px) {
      .article__excerpt {
        padding: 0.975rem; } }
  .article__tags {
    margin: 0.65rem 0; }
    .article__tags .icon {
      display: block;
      float: left;
      height: 1.4rem;
      width: 1.4rem;
      margin: 0.3rem 0.5rem 0 0; }
    .article__tags .icon--tag {
      fill: #45b8ac; }

@keyframes growShrink {
  0% {
    transform: scale(0); }
  50% {
    transform: scale(1.2);
    opacity: 1; }
  100% {
    transform: scale(1.2);
    opacity: 0; } }

.mobile {
  box-sizing: border-box;
  position: fixed;
  height: 2.6rem;
  bottom: 0;
  left: 0;
  right: 0;
  background: #444;
  z-index: 50;
  display: flex;
  font-size: 1rem;
  border-top: 1px solid #5e5e5e; }
  @media only screen and (max-width: 720px) {
    .mobile {
      font-size: 1.3rem; } }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .mobile {
      display: none; } }
  .mobile__link {
    position: relative;
    width: 33.33%;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    border-bottom: 0;
    overflow: hidden; }
    .mobile__link:before {
      content: " ";
      position: absolute;
      width: 100%;
      padding-bottom: 100%;
      background: #45b8ac;
      z-index: -1;
      border-radius: 50%;
      transform: scale(0); }
    .mobile__link:after {
      content: " ";
      position: absolute;
      width: 100%;
      top: 0;
      height: 3px;
      background-color: #45b8ac;
      transform-origin: center center;
      transform: scaleX(0);
      transition: transform 0.3s cubic-bezier(0.39, 0.575, 0.565, 1); }
    .mobile__link:hover, .mobile__link:focus {
      background: transparent; }
      .mobile__link:hover:after, .mobile__link:focus:after {
        transform: scaleX(1); }
    .mobile__link.animate:before {
      animation-name: growShrink;
      animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
      animation-duration: 0.4s;
      animation-iteration-count: 1; }
  .mobile__icon {
    margin: 1px 0.25rem 0 0; }
    @media only screen and (max-width: 720px) {
      .mobile__icon {
        margin: 0; } }
  @media only screen and (max-width: 720px) {
    .mobile__text {
      display: none; } }

.footer {
  font-size: .7rem;
  color: #fff;
  background: #444;
  padding: 0 1.3rem;
  overflow: hidden; }
  .footer a {
    color: #fff; }
    .footer a:hover {
      color: #444; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .footer {
      margin-left: 16.9rem; } }

@keyframes rotateLoader {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

@keyframes moveLoader {
  0% {
    transform: translateX(-50%); }
  50% {
    transform: translateX(50%); }
  100% {
    transform: translateX(-50%); } }

.screen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #fff;
  transition: all .2s ease-out;
  opacity: 0;
  visibility: hidden;
  z-index: 500; }
  .screen.show {
    opacity: 1;
    visibility: visible; }
    .screen.show .loader {
      animation-name: moveLoader; }

.loader {
  position: relative;
  width: 100%;
  height: 100%;
  transform: translateX(-50%);
  background: linear-gradient(to right, rgba(68, 68, 68, 0), #444, rgba(68, 68, 68, 0));
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out; }

.screen-sm {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2.46662rem;
  transition: all .2s ease-out;
  opacity: 0;
  visibility: hidden;
  z-index: 500;
  background: #444; }
  .screen-sm.show {
    opacity: 1;
    visibility: visible; }
  .screen-sm .loader {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 1rem;
    height: 1rem;
    margin-top: -0.5rem;
    margin-left: -0.5rem;
    border-radius: 50%;
    border: 0.16667rem dotted #45b8ac;
    border-right-width: 0;
    animation-name: rotateLoader;
    animation-duration: .75s;
    animation-iteration-count: infinite;
    animation-timing-function: linear; }
  @media only screen and (orientation: landscape) and (min-width: 1200px) {
    .screen-sm {
      left: 16.9rem; } }

.alert {
  font-size: 1.25rem;
  margin: 2.6rem 0;
  display: flex;
  align-items: center; }
  .alert__icon {
    margin: 1.3rem 0 1.3rem 1.3rem;
    width: 4rem;
    height: 4rem;
    flex: 0 0 auto; }
  .alert__content {
    float: left;
    width: 90%;
    flex: 1 1 auto;
    padding: 1.3rem; }
  .alert--success {
    border: 2px dotted #45b8ac; }
    .alert--success .alert__icon {
      fill: #45b8ac; }
  .alert--error {
    border: 2px dotted #EB4541; }
    .alert--error .alert__icon {
      fill: #EB4541; }
  .alert--floating {
    position: absolute;
    top: 50%;
    z-index: 500;
    background: #fff;
    transition: all .2s ease-out;
    visibility: hidden;
    opacity: 0; }
    .alert--floating.show {
      visibility: visible;
      opacity: 1; }

.label {
  display: inline-block;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  font-size: 0.9rem;
  margin-left: 0.65rem;
  color: #45b8ac; }
  .label .icon {
    position: relative;
    bottom: -0.1rem; }

.g-recaptcha {
  position: absolute; }
  .g-recaptcha .grecaptcha-badge {
    bottom: 5rem !important; }

[aata-form] {
  position: relative; }

.aata-form {
  position: relative;
  margin-bottom: 1.3rem;
  display: grid;
  grid-template-columns: repeat(16, 1fr);
  grid-gap: 1.3rem 0; }
  .aata-form__disclaimer {
    font-size: 0.75rem;
    grid-column: span 16; }
    @media only screen and (orientation: landscape) and (min-width: 1200px) {
      .aata-form__disclaimer {
        grid-column: 3 / span 12; } }
  .aata-form__input-group {
    position: relative;
    margin-bottom: 0.65rem; }
    @supports (display: grid) {
      .aata-form__input-group {
        margin-bottom: 0;
        grid-column: span 16; }
        @media only screen and (min-width: 721px) {
          .aata-form__input-group {
            grid-column: span 8; }
            .aata-form__input-group:nth-child(2n) > .aata-form__input {
              position: relative;
              z-index: 1;
              border-right-color: #d3d3d3; }
              .aata-form__input-group:nth-child(2n) > .aata-form__input:focus {
                border-right-color: #45b8ac; }
            .aata-form__input-group:nth-child(2n + 1) > .aata-form__input {
              position: relative;
              left: -2px; }
              .aata-form__input-group:nth-child(2n + 1) > .aata-form__input:focus {
                z-index: 2; } }
        @media only screen and (orientation: landscape) and (min-width: 1200px) {
          .aata-form__input-group {
            grid-column: span 6; }
            .aata-form__input-group:nth-child(2n) {
              grid-column: 3 / span 6; } } }
    .aata-form__input-group .aata-form__label--bottom- {
      position: relative;
      bottom: -0.2rem; }
  .aata-form__label {
    display: block;
    padding-left: .5rem; }
  .aata-form__input {
    width: 100%; }
    .aata-form__input.ng-invalid.ng-dirty:not(:focus) {
      border-bottom-color: #EB4541; }
  .aata-form__fieldset {
    margin-bottom: 0.65rem; }
    @supports (display: grid) {
      .aata-form__fieldset {
        margin-bottom: 0;
        grid-column: span 16; }
        @media only screen and (orientation: landscape) and (min-width: 1200px) {
          .aata-form__fieldset {
            grid-column: 3 / span 12; } } }
    .aata-form__fieldset-grid {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 0.325rem; }
      @media only screen and (orientation: landscape) and (min-width: 1200px) {
        .aata-form__fieldset-grid {
          display: grid; } }
  .aata-form__checkbox-label {
    cursor: pointer; }
  .aata-form__textarea {
    width: 100%;
    min-height: 6.6664rem; }
    @supports (display: grid) {
      .aata-form__textarea-group {
        grid-column: span 16; }
        @media only screen and (orientation: landscape) and (min-width: 1200px) {
          .aata-form__textarea-group {
            grid-column: 3 / span 12; } } }
  .aata-form__button-container {
    text-align: center; }
    @supports (display: grid) {
      .aata-form__button-container {
        grid-column: span 16; } }
  .aata-form__button {
    display: inline-block;
    width: 10rem; }
  .aata-form__message {
    color: #EB4541;
    position: absolute;
    font-size: 0.75rem;
    line-height: 1.1;
    font-weight: 700;
    left: 0; }
  .aata-form__screen {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    transition: all .2s ease-out;
    opacity: 0;
    visibility: hidden;
    z-index: 10;
    background: #fff; }
    .aata-form__screen.show {
      opacity: 1;
      visibility: visible; }

.required-message {
  margin: 0.65rem 0;
  color: #EB4541;
  font-weight: 700; }

.required {
  color: #EB4541; }

/*------------------------------------*    WORDPRESS CORE
\*------------------------------------*/
.alignnone {
  margin: 5px 20px 20px 0; }

.aligncenter,
div.aligncenter {
  display: block;
  margin: 5px auto 5px auto; }

.alignright {
  float: right;
  margin: 5px 0 20px 20px; }

.alignleft {
  float: left;
  margin: 5px 20px 20px 0; }

a img.alignright {
  float: right;
  margin: 5px 0 20px 20px; }

a img.alignnone {
  margin: 5px 20px 20px 0; }

a img.alignleft {
  float: left;
  margin: 5px 20px 20px 0; }

a img.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.wp-caption {
  background: #FFF;
  border: 1px solid #F0F0F0;
  max-width: 96%;
  padding: 5px 3px 10px;
  text-align: center; }

.wp-caption.alignnone {
  margin: 5px 20px 20px 0; }

.wp-caption.alignleft {
  margin: 5px 20px 20px 0; }

.wp-caption.alignright {
  margin: 5px 0 20px 20px; }

.wp-caption img {
  border: 0 none;
  height: auto;
  margin: 0;
  max-width: 98.5%;
  padding: 0;
  width: auto; }

.wp-caption .wp-caption-text,
.gallery-caption {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 0 4px 5px; }

/*------------------------------------*    PRINT
\*------------------------------------*/
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }
  pre, blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr, img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=style.css.map*/